How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Comparing 2 version using diff is quick and efficient because it will show the before and after changes made to the line.   

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps to track changes efficiently especially you are constantly making changes to a single file you are working on. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual commit: (Pros) Changes made can be logical and understandable through commit description.
    (Cons) forget to save when working on codes for too long and too big to commit, too much code have changed.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Others, like Google Docs is working on file that is seldom interconnected to one another such as photo. On the other hand, working on files that making changes in 1 file affect the others. 

How can you use the commands git log and git diff to view the history of files?

    git log shows the commit on the files such as time stamp and diff shows the detail changes in the code

How might using version control make you more confident to make changes that
could break something?

    you can easily revert version and make changes to the work even many commits back.  

Now that you have your workspace set up, what do you want to try using Git for?

    Using Git to properly keep track of work. 
